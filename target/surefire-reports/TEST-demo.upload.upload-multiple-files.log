13:17:34.584 request:
1 > POST http://127.0.0.1:58351/files/multiple
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Type: multipart/form-data; boundary=AK9pIRVSnCLlGGW-SQ4Dwxr8E5OF_MnM5bL
1 > Host: 127.0.0.1:58351
1 > Transfer-Encoding: chunked
1 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)

13:17:34.605 response time in milliseconds: 20
1 < 200
1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
1 < Content-Type: application/json;charset=UTF-8
1 < Date: Thu, 20 Sep 2018 07:32:33 GMT
1 < Expires: 0
1 < Pragma: no-cache
1 < Transfer-Encoding: chunked
1 < X-Content-Type-Options: nosniff
1 < X-Frame-Options: DENY
1 < X-XSS-Protection: 1; mode=block
[{"id":"3f33ebf0-d4bc-449c-9bac-fe1875e28e56","filename":"upload-name1.pdf","message":"hello world","contentType":"application/pdf"},{"id":"0773e1aa-95bb-4b43-a5e9-76452918b931","filename":"upload-name2.pdf","message":"hello world","contentType":"application/pdf"}]

13:17:34.623 request:
2 > GET http://127.0.0.1:58351/files/3f33ebf0-d4bc-449c-9bac-fe1875e28e56
2 > Accept-Encoding: gzip,deflate
2 > Connection: Keep-Alive
2 > Host: 127.0.0.1:58351
2 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)

13:17:34.633 response time in milliseconds: 9
2 < 200
2 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
2 < Content-Disposition: attachment; filename="upload-name1.pdf"
2 < Content-Length: 6514
2 < Content-Type: application/pdf
2 < Date: Thu, 20 Sep 2018 07:32:33 GMT
2 < Expires: 0
2 < Pragma: no-cache
2 < X-Content-Type-Options: nosniff
2 < X-Frame-Options: DENY
2 < X-XSS-Protection: 1; mode=block

13:17:34.656 request:
3 > GET http://127.0.0.1:58351/files/0773e1aa-95bb-4b43-a5e9-76452918b931
3 > Accept-Encoding: gzip,deflate
3 > Connection: Keep-Alive
3 > Host: 127.0.0.1:58351
3 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)

13:17:34.663 response time in milliseconds: 7
3 < 200
3 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
3 < Content-Disposition: attachment; filename="upload-name2.pdf"
3 < Content-Length: 6514
3 < Content-Type: application/pdf
3 < Date: Thu, 20 Sep 2018 07:32:34 GMT
3 < Expires: 0
3 < Pragma: no-cache
3 < X-Content-Type-Options: nosniff
3 < X-Frame-Options: DENY
3 < X-XSS-Protection: 1; mode=block

 > GET http://127.0.0.1:8080/headers
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:8080
1 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)

13:06:50.468 org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused), http call failed after 1 milliseconds for URL: http://127.0.0.1:8080/headers
13:06:50.468 http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused)
13:06:50.469 feature call failed: classpath:demo/headers/common-noheaders.feature
arg: [object Object]


org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused)
13:06:50.469 javascript function call failed: 


org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused)
13:06:50.469 failed function body: function() {
  karate.configure('connectTimeout', 5000);
  karate.configure('readTimeout', 5000);  
  var port = karate.properties['demo.server.port'];  
  if (!port) {
    port = karate.env == 'web' ? 8090 : 8080;
  }
  var protocol = 'http';
  if (karate.properties['demo.server.https'] == 'true') {
    protocol = 'https';
    karate.configure('ssl', true);
  }  
  var config = { demoBaseUrl: protocol + '://127.0.0.1:' + port };
  if (karate.env == 'proxy') {
    var proxyPort = karate.properties['demo.proxy.port']
    karate.configure('proxy', 'http://127.0.0.1:' + proxyPort);
  }
  if (karate.env != 'mock' && karate.env != 'proxy' && karate.env != 'contract') {
    // 'callSingle' is guaranteed to run only once even across all threads
    var result = karate.callSingle('classpath:demo/headers/common-noheaders.feature', config);
    // and it sets a variable called 'authInfo' used in headers-single.feature
    config.authInfo = { authTime: result.time, authToken: result.token };
  }
  return config;
}
