<?xml version="1.0" encoding="UTF-8"?>
<testsuite failures="0"
           name="dynamic params using scenario-outline, examples and json"
           skipped="0"
           tests="14"
           time="0.78946">
   <testcase classname="demo.search.dynamic-params"
             name="using a javascript function to pre-process the search parameters (1)"
             time="0.097836">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: 'foo', country: 'IN', active: 'true', limit: '1' }....passed
* def nullify =.............................................................passed
* def getResponseParam = read('get-response-param.js')......................passed
* def query = nullify(query)................................................passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And assert getResponseParam('name') == query.name...........................passed
And assert getResponseParam('country') == query.country.....................passed
And assert getResponseParam('active') == query.active.......................passed
And assert getResponseParam('limit') == query.limit.........................passed
And match response !contains { '': '#notnull' }.............................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="using a javascript function to pre-process the search parameters (2)"
             time="0.049082">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: 'bar', country: '', active: '', limit: '5' }..........passed
* def nullify =.............................................................passed
* def getResponseParam = read('get-response-param.js')......................passed
* def query = nullify(query)................................................passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And assert getResponseParam('name') == query.name...........................passed
And assert getResponseParam('country') == query.country.....................passed
And assert getResponseParam('active') == query.active.......................passed
And assert getResponseParam('limit') == query.limit.........................passed
And match response !contains { 'country': '#notnull' }......................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="using a javascript function to pre-process the search parameters (3)"
             time="0.04253">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: 'baz', country: 'JP', active: '', limit: '' }.........passed
* def nullify =.............................................................passed
* def getResponseParam = read('get-response-param.js')......................passed
* def query = nullify(query)................................................passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And assert getResponseParam('name') == query.name...........................passed
And assert getResponseParam('country') == query.country.....................passed
And assert getResponseParam('active') == query.active.......................passed
And assert getResponseParam('limit') == query.limit.........................passed
And match response !contains { 'active': '#notnull' }.......................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="using a javascript function to pre-process the search parameters (4)"
             time="0.019497">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: '', country: 'US', active: '', limit: '3' }...........passed
* def nullify =.............................................................passed
* def getResponseParam = read('get-response-param.js')......................passed
* def query = nullify(query)................................................passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And assert getResponseParam('name') == query.name...........................passed
And assert getResponseParam('country') == query.country.....................passed
And assert getResponseParam('active') == query.active.......................passed
And assert getResponseParam('limit') == query.limit.........................passed
And match response !contains { 'name': '#notnull' }.........................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="using a javascript function to pre-process the search parameters (5)"
             time="0.026592">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: '', country: '', active: 'false', limit: '' }.........passed
* def nullify =.............................................................passed
* def getResponseParam = read('get-response-param.js')......................passed
* def query = nullify(query)................................................passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And assert getResponseParam('name') == query.name...........................passed
And assert getResponseParam('country') == query.country.....................passed
And assert getResponseParam('active') == query.active.......................passed
And assert getResponseParam('limit') == query.limit.........................passed
And match response !contains { 'limit': '#notnull' }........................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="here the parameters are set to null within the 'Examples' table itself (1)"
             time="0.04602">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: 'foo', country: 'IN', active: true, limit: 1 }........passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains {}.............................................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="here the parameters are set to null within the 'Examples' table itself (2)"
             time="0.020056">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: 'bar', country: null, active: null, limit: 5 }........passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { country: '#notnull', active: '#notnull' }....passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="here the parameters are set to null within the 'Examples' table itself (3)"
             time="0.017245">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: 'baz', country: 'JP', active: null, limit: null }.....passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { active: '#notnull', limit: '#notnull' }......passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="here the parameters are set to null within the 'Examples' table itself (4)"
             time="0.020822">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: null, country: 'US', active: null, limit: 3 }.........passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { name: '#notnull', active: '#notnull' }.......passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="here the parameters are set to null within the 'Examples' table itself (5)"
             time="0.01963">
      <system-out>* url demoBaseUrl...........................................................passed
* def query = { name: null, country: null, active: false, limit: null }.....passed
* print query...............................................................passed
Given path 'search'.........................................................passed
And params query............................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { name: '#notnull', country: '#notnull', limit: '#notnull' }.passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="using a data-driven called feature instead of a scenario outline"
             time="0.230564">
      <system-out>* url demoBaseUrl...........................................................passed
* table data................................................................passed
* call[0] search-complex.feature............................................passed
* def search = __arg........................................................passed
* remove search.missing.....................................................passed
* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params search...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
* def exists = function(v){ return v ? '#[1]' : null }......................passed
* def expected = { name: '##(exists(name))', country: '##(exists(country))', active: '##(exists(active))', limit: '##(exists(limit))' }.passed
* match response == expected................................................passed
* def fun =.................................................................passed
* match response !contains fun(missing).....................................passed
* call[1] search-complex.feature............................................passed
* def search = __arg........................................................passed
* remove search.missing.....................................................passed
* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params search...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
* def exists = function(v){ return v ? '#[1]' : null }......................passed
* def expected = { name: '##(exists(name))', country: '##(exists(country))', active: '##(exists(active))', limit: '##(exists(limit))' }.passed
* match response == expected................................................passed
* def fun =.................................................................passed
* match response !contains fun(missing).....................................passed
* call[2] search-complex.feature............................................passed
* def search = __arg........................................................passed
* remove search.missing.....................................................passed
* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params search...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
* def exists = function(v){ return v ? '#[1]' : null }......................passed
* def expected = { name: '##(exists(name))', country: '##(exists(country))', active: '##(exists(active))', limit: '##(exists(limit))' }.passed
* match response == expected................................................passed
* def fun =.................................................................passed
* match response !contains fun(missing).....................................passed
* call[3] search-complex.feature............................................passed
* def search = __arg........................................................passed
* remove search.missing.....................................................passed
* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params search...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
* def exists = function(v){ return v ? '#[1]' : null }......................passed
* def expected = { name: '##(exists(name))', country: '##(exists(country))', active: '##(exists(active))', limit: '##(exists(limit))' }.passed
* match response == expected................................................passed
* def fun =.................................................................passed
* match response !contains fun(missing).....................................passed
* call[4] search-complex.feature............................................passed
* def search = __arg........................................................passed
* remove search.missing.....................................................passed
* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params search...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
* def exists = function(v){ return v ? '#[1]' : null }......................passed
* def expected = { name: '##(exists(name))', country: '##(exists(country))', active: '##(exists(active))', limit: '##(exists(limit))' }.passed
* match response == expected................................................passed
* def fun =.................................................................passed
* match response !contains fun(missing).....................................passed
* def result = call read('search-complex.feature') data.....................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="using the set keyword to build json and nulls are skipped by default"
             time="0.145805">
      <system-out>* url demoBaseUrl...........................................................passed
* set data..................................................................passed
* table search..............................................................passed
* call[0] search-simple.feature.............................................passed
Given url demoBaseUrl.......................................................passed
And path 'search'...........................................................passed
And params params...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == expected..............................................passed
And match response !contains missing........................................passed
* call[1] search-simple.feature.............................................passed
Given url demoBaseUrl.......................................................passed
And path 'search'...........................................................passed
And params params...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == expected..............................................passed
And match response !contains missing........................................passed
* call[2] search-simple.feature.............................................passed
Given url demoBaseUrl.......................................................passed
And path 'search'...........................................................passed
And params params...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == expected..............................................passed
And match response !contains missing........................................passed
* call[3] search-simple.feature.............................................passed
Given url demoBaseUrl.......................................................passed
And path 'search'...........................................................passed
And params params...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == expected..............................................passed
And match response !contains missing........................................passed
* call[4] search-simple.feature.............................................passed
Given url demoBaseUrl.......................................................passed
And path 'search'...........................................................passed
And params params...........................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == expected..............................................passed
And match response !contains missing........................................passed
* def result = call read('search-simple.feature') search....................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="params json with embedded expressions"
             time="0.020556">
      <system-out>* url demoBaseUrl...........................................................passed
* def data = { one: 'one', two: 'two' }.....................................passed
Given path 'search'.........................................................passed
And params ({ name: data.one, country: data.two })..........................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == { name: ['one'], country: ['two'] }...................passed
</system-out>
   </testcase>
   <testcase classname="demo.search.dynamic-params"
             name="test that multi-params work as expected"
             time="0.033225">
      <system-out>* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And param foo = 'bar', 'baz'................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == { foo: ['bar', 'baz'] }...............................passed
Given path 'search'.........................................................passed
And params { foo: ['bar', 'baz'] }..........................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == { foo: ['bar', 'baz'] }...............................passed
Given path 'search'.........................................................passed
And param foo = 'bar,baz'...................................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == { foo: ['bar,baz'] }..................................passed
Given path 'search'.........................................................passed
And params { foo: 'bar,baz' }...............................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response == { foo: ['bar,baz'] }..................................passed
</system-out>
   </testcase>
</testsuite>
