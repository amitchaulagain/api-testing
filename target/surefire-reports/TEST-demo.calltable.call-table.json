[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 19371876,
              "status": "passed"
            },
            "line": 4,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 17438578,
              "status": "passed"
            },
            "line": 6,
            "name": "table kittens",
            "match": {
              "arguments": [
                {
                  "val": "kittens",
                  "offset": 6
                }
              ],
              "location": "StepDefs.table(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "age"
                ],
                "line": 7
              },
              {
                "cells": [
                  "\u0027Bob\u0027",
                  "2"
                ],
                "line": 8
              },
              {
                "cells": [
                  "\u0027Wild\u0027",
                  "1"
                ],
                "line": 9
              },
              {
                "cells": [
                  "\u0027Nyan\u0027",
                  "3"
                ],
                "line": 10
              },
              {
                "cells": [
                  "\u0027Keyboard\u0027",
                  "5"
                ],
                "line": 11
              },
              {
                "cells": [
                  "\u0027LOL\u0027",
                  "3"
                ],
                "line": 12
              },
              {
                "cells": [
                  "\u0027Ceiling\u0027",
                  "2"
                ],
                "line": 13
              }
            ],
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[0] [re-usable feature to create a single cat] kitten-create.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"name\": \"Bob\",\n  \"age\": 2\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# just to demo that we have two special variables __loop and __arg"
              },
              {
                "line": 7,
                "value": "# this is a useful way to refer to any list-like variables defined in the caller"
              },
              {
                "line": 8,
                "value": "# for example, you could load 2 different JSON arrays \u0027inputs\u0027 and \u0027outputs\u0027"
              },
              {
                "line": 9,
                "value": "# and refer to both in a data-driven test"
              }
            ],
            "line": 10,
            "name": "match __arg \u003d\u003d kittens[__loop]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "__arg",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 12
                },
                {
                  "val": "kittens[__loop]",
                  "offset": 15
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 12,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 13,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 14,
            "name": "request { name: \u0027#(name)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027#(name)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 15,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 15,
              "value": "13:17:32.889 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 14\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"Bob\"}\n\n13:17:32.895 response time in milliseconds: 5\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":26,\"name\":\"Bob\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 16,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[1] [re-usable feature to create a single cat] kitten-create.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"name\": \"Wild\",\n  \"age\": 1\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# just to demo that we have two special variables __loop and __arg"
              },
              {
                "line": 7,
                "value": "# this is a useful way to refer to any list-like variables defined in the caller"
              },
              {
                "line": 8,
                "value": "# for example, you could load 2 different JSON arrays \u0027inputs\u0027 and \u0027outputs\u0027"
              },
              {
                "line": 9,
                "value": "# and refer to both in a data-driven test"
              }
            ],
            "line": 10,
            "name": "match __arg \u003d\u003d kittens[__loop]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "__arg",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 12
                },
                {
                  "val": "kittens[__loop]",
                  "offset": 15
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 12,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 13,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 14,
            "name": "request { name: \u0027#(name)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027#(name)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 15,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 15,
              "value": "13:17:32.910 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 15\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"Wild\"}\n\n13:17:32.913 response time in milliseconds: 3\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":28,\"name\":\"Wild\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 16,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[2] [re-usable feature to create a single cat] kitten-create.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"name\": \"Nyan\",\n  \"age\": 3\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# just to demo that we have two special variables __loop and __arg"
              },
              {
                "line": 7,
                "value": "# this is a useful way to refer to any list-like variables defined in the caller"
              },
              {
                "line": 8,
                "value": "# for example, you could load 2 different JSON arrays \u0027inputs\u0027 and \u0027outputs\u0027"
              },
              {
                "line": 9,
                "value": "# and refer to both in a data-driven test"
              }
            ],
            "line": 10,
            "name": "match __arg \u003d\u003d kittens[__loop]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "__arg",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 12
                },
                {
                  "val": "kittens[__loop]",
                  "offset": 15
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 12,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 13,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 14,
            "name": "request { name: \u0027#(name)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027#(name)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 15,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 15,
              "value": "13:17:32.924 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 15\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"Nyan\"}\n\n13:17:32.927 response time in milliseconds: 3\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":29,\"name\":\"Nyan\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 16,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[3] [re-usable feature to create a single cat] kitten-create.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"name\": \"Keyboard\",\n  \"age\": 5\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# just to demo that we have two special variables __loop and __arg"
              },
              {
                "line": 7,
                "value": "# this is a useful way to refer to any list-like variables defined in the caller"
              },
              {
                "line": 8,
                "value": "# for example, you could load 2 different JSON arrays \u0027inputs\u0027 and \u0027outputs\u0027"
              },
              {
                "line": 9,
                "value": "# and refer to both in a data-driven test"
              }
            ],
            "line": 10,
            "name": "match __arg \u003d\u003d kittens[__loop]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "__arg",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 12
                },
                {
                  "val": "kittens[__loop]",
                  "offset": 15
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 12,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 13,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 14,
            "name": "request { name: \u0027#(name)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027#(name)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 15,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 15,
              "value": "13:17:32.938 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 19\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"Keyboard\"}\n\n13:17:32.941 response time in milliseconds: 3\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":30,\"name\":\"Keyboard\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 16,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[4] [re-usable feature to create a single cat] kitten-create.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"name\": \"LOL\",\n  \"age\": 3\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# just to demo that we have two special variables __loop and __arg"
              },
              {
                "line": 7,
                "value": "# this is a useful way to refer to any list-like variables defined in the caller"
              },
              {
                "line": 8,
                "value": "# for example, you could load 2 different JSON arrays \u0027inputs\u0027 and \u0027outputs\u0027"
              },
              {
                "line": 9,
                "value": "# and refer to both in a data-driven test"
              }
            ],
            "line": 10,
            "name": "match __arg \u003d\u003d kittens[__loop]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "__arg",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 12
                },
                {
                  "val": "kittens[__loop]",
                  "offset": 15
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 12,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 13,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 14,
            "name": "request { name: \u0027#(name)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027#(name)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 15,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 15,
              "value": "13:17:32.953 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 14\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"LOL\"}\n\n13:17:32.957 response time in milliseconds: 3\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":34,\"name\":\"LOL\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 16,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[5] [re-usable feature to create a single cat] kitten-create.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"name\": \"Ceiling\",\n  \"age\": 2\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# just to demo that we have two special variables __loop and __arg"
              },
              {
                "line": 7,
                "value": "# this is a useful way to refer to any list-like variables defined in the caller"
              },
              {
                "line": 8,
                "value": "# for example, you could load 2 different JSON arrays \u0027inputs\u0027 and \u0027outputs\u0027"
              },
              {
                "line": 9,
                "value": "# and refer to both in a data-driven test"
              }
            ],
            "line": 10,
            "name": "match __arg \u003d\u003d kittens[__loop]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "__arg",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 12
                },
                {
                  "val": "kittens[__loop]",
                  "offset": 15
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 12,
            "name": "url demoBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "demoBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 13,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 14,
            "name": "request { name: \u0027#(name)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027#(name)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 15,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 15,
              "value": "13:17:32.970 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 18\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"Ceiling\"}\n\n13:17:32.972 response time in milliseconds: 2\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":38,\"name\":\"Ceiling\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 16,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 117516101,
              "status": "passed"
            },
            "line": 15,
            "name": "def result \u003d call read(\u0027kitten-create.feature\u0027) kittens",
            "match": {
              "arguments": [
                {
                  "val": "result",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027kitten-create.feature\u0027) kittens",
                  "offset": 13
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 257752,
              "status": "passed"
            },
            "comments": [
              {
                "line": 17,
                "value": "# use json-path to \u0027un-pack\u0027 the array of kittens created"
              }
            ],
            "line": 18,
            "name": "def created \u003d $result[*].response",
            "match": {
              "arguments": [
                {
                  "val": "created",
                  "offset": 4
                },
                {
                  "val": "$result[*].response",
                  "offset": 14
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 293878,
              "status": "passed"
            },
            "comments": [
              {
                "line": 20,
                "value": "# for each iteration, a variable called \u0027__loop\u0027 is set for convenience"
              },
              {
                "line": 21,
                "value": "# which can be accessed in the called feature as well"
              }
            ],
            "line": 22,
            "name": "match result[*].__loop \u003d\u003d [0, 1, 2, 3, 4, 5]",
            "match": {
              "arguments": [
                {},
                {
                  "val": "result[*].__loop",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 23
                },
                {
                  "val": "[0, 1, 2, 3, 4, 5]",
                  "offset": 26
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 274798,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "# which is not even needed for most data-driven assertions"
              }
            ],
            "line": 25,
            "name": "match created[*].name \u003d\u003d $kittens[*].name",
            "match": {
              "arguments": [
                {},
                {
                  "val": "created[*].name",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 22
                },
                {
                  "val": "$kittens[*].name",
                  "offset": 25
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          }
        ]
      },
      {
        "line": 27,
        "name": "create parent cat using kittens",
        "description": "",
        "id": "calling-another-feature-file-in-a-loop;create-parent-cat-using-kittens",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6744226,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# create mom cat"
              }
            ],
            "line": 30,
            "name": "path \u0027cats\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4279894,
              "status": "passed"
            },
            "line": 31,
            "name": "request { name: \u0027Billie\u0027, kittens: \u0027#(created)\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "{ name: \u0027Billie\u0027, kittens: \u0027#(created)\u0027 }",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12524445,
              "status": "passed"
            },
            "line": 32,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 32,
              "value": "13:17:32.996 request:\n1 \u003e POST http://127.0.0.1:58351/cats\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 178\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: 127.0.0.1:58351\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n{\"name\":\"Billie\",\"kittens\":[{\"id\":26,\"name\":\"Bob\"},{\"id\":28,\"name\":\"Wild\"},{\"id\":29,\"name\":\"Nyan\"},{\"id\":30,\"name\":\"Keyboard\"},{\"id\":34,\"name\":\"LOL\"},{\"id\":38,\"name\":\"Ceiling\"}]}\n\n13:17:33.005 response time in milliseconds: 9\n1 \u003c 200\n1 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n1 \u003c Content-Type: application/json;charset\u003dUTF-8\n1 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n1 \u003c Expires: 0\n1 \u003c Pragma: no-cache\n1 \u003c Transfer-Encoding: chunked\n1 \u003c X-Content-Type-Options: nosniff\n1 \u003c X-Frame-Options: DENY\n1 \u003c X-XSS-Protection: 1; mode\u003dblock\n{\"id\":39,\"name\":\"Billie\",\"kittens\":[{\"id\":26,\"name\":\"Bob\"},{\"id\":28,\"name\":\"Wild\"},{\"id\":29,\"name\":\"Nyan\"},{\"id\":30,\"name\":\"Keyboard\"},{\"id\":34,\"name\":\"LOL\"},{\"id\":38,\"name\":\"Ceiling\"}]}\n\n"
            }
          },
          {
            "result": {
              "duration": 152051,
              "status": "passed"
            },
            "line": 33,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13679079,
              "status": "passed"
            },
            "comments": [
              {
                "line": 34,
                "value": "# the \u0027^^\u0027 is an embeddable short-cut for \u0027contains only\u0027 !"
              }
            ],
            "line": 35,
            "name": "match response \u003d\u003d { id: \u0027#number\u0027, name: \u0027Billie\u0027, kittens: \u0027#(^^created)\u0027 }",
            "match": {
              "arguments": [
                {},
                {
                  "val": "response",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 15
                },
                {
                  "val": "{ id: \u0027#number\u0027, name: \u0027Billie\u0027, kittens: \u0027#(^^created)\u0027 }",
                  "offset": 18
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2730408,
              "status": "passed"
            },
            "comments": [
              {
                "line": 37,
                "value": "# get kittens for billie using the id from the previous response"
              }
            ],
            "line": 38,
            "name": "path \u0027cats\u0027, $.id, \u0027kittens\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\u0027cats\u0027, $.id, \u0027kittens\u0027",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12590679,
              "status": "passed"
            },
            "line": 39,
            "name": "method get",
            "match": {
              "arguments": [
                {
                  "val": "get",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 39,
              "value": "13:17:33.028 request:\n2 \u003e GET http://127.0.0.1:58351/cats/39/kittens\n2 \u003e Accept-Encoding: gzip,deflate\n2 \u003e Connection: Keep-Alive\n2 \u003e Host: 127.0.0.1:58351\n2 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)\n\n13:17:33.038 response time in milliseconds: 10\n2 \u003c 200\n2 \u003c Cache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\n2 \u003c Content-Type: application/json;charset\u003dUTF-8\n2 \u003c Date: Thu, 20 Sep 2018 07:32:32 GMT\n2 \u003c Expires: 0\n2 \u003c Pragma: no-cache\n2 \u003c Transfer-Encoding: chunked\n2 \u003c X-Content-Type-Options: nosniff\n2 \u003c X-Frame-Options: DENY\n2 \u003c X-XSS-Protection: 1; mode\u003dblock\n[{\"id\":26,\"name\":\"Bob\"},{\"id\":28,\"name\":\"Wild\"},{\"id\":29,\"name\":\"Nyan\"},{\"id\":30,\"name\":\"Keyboard\"},{\"id\":34,\"name\":\"LOL\"},{\"id\":38,\"name\":\"Ceiling\"}]\n\n"
            }
          },
          {
            "result": {
              "duration": 100622,
              "status": "passed"
            },
            "line": 40,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2155577,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "# some demo match examples"
              }
            ],
            "line": 43,
            "name": "match each response \u003d\u003d { id: \u0027#number\u0027, name: \u0027#string\u0027 }",
            "match": {
              "arguments": [
                {
                  "val": "each ",
                  "offset": 6
                },
                {
                  "val": "response",
                  "offset": 11
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 20
                },
                {
                  "val": "{ id: \u0027#number\u0027, name: \u0027#string\u0027 }",
                  "offset": 23
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 21830182,
              "status": "passed"
            },
            "line": 44,
            "name": "match response \u003d\u003d \"#[6] { id: \u0027#number\u0027, name: \u0027#string\u0027 }\"",
            "match": {
              "arguments": [
                {},
                {
                  "val": "response",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 15
                },
                {
                  "val": "\"#[6] { id: \u0027#number\u0027, name: \u0027#string\u0027 }\"",
                  "offset": 18
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 1906134,
              "status": "passed"
            },
            "comments": [
              {
                "line": 46,
                "value": "# pure data-driven assertion, compare with the original data"
              }
            ],
            "line": 47,
            "name": "match response[*].name contains only $kittens[*].name",
            "match": {
              "arguments": [
                {},
                {
                  "val": "response[*].name",
                  "offset": 6
                },
                {},
                {},
                {
                  "val": " only",
                  "offset": 31
                },
                {
                  "val": " $kittens[*].name",
                  "offset": 36
                }
              ],
              "location": "StepDefs.matchContains(String,String,String,String,String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 2303016,
              "status": "passed"
            },
            "line": 49,
            "name": "assert response.length \u003d\u003d 6",
            "match": {
              "arguments": [
                {
                  "val": "response.length \u003d\u003d 6",
                  "offset": 7
                }
              ],
              "location": "StepDefs.asssertBoolean(String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 5806309,
              "status": "passed"
            },
            "comments": [
              {
                "line": 50,
                "value": "# prefer match instead of assert"
              }
            ],
            "line": 51,
            "name": "match response \u003d\u003d \u0027#[6]\u0027",
            "match": {
              "arguments": [
                {},
                {
                  "val": "response",
                  "offset": 6
                },
                {},
                {
                  "val": "\u003d\u003d",
                  "offset": 15
                },
                {
                  "val": "\u0027#[6]\u0027",
                  "offset": 18
                }
              ],
              "location": "StepDefs.matchEquals(String,String,String,String,String)"
            },
            "keyword": "* "
          }
        ]
      }
    ],
    "name": "demo/calltable/call-table.feature",
    "description": "calling another feature file in a loop",
    "id": "calling-another-feature-file-in-a-loop",
    "keyword": "Feature",
    "uri": "demo/calltable/call-table.feature"
  }
]