13:17:33.951 request:
1 > POST http://127.0.0.1:58351/cats
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 14
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:58351
1 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)
{"name":"Tom"}

13:17:33.957 response time in milliseconds: 6
1 < 200
1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
1 < Content-Type: application/json;charset=UTF-8
1 < Date: Thu, 20 Sep 2018 07:32:33 GMT
1 < Expires: 0
1 < Pragma: no-cache
1 < Transfer-Encoding: chunked
1 < X-Content-Type-Options: nosniff
1 < X-Frame-Options: DENY
1 < X-XSS-Protection: 1; mode=block
{"id":45,"name":"Tom"}

13:17:33.994 request:
1 > GET http://127.0.0.1:58351/cats/45
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:58351
1 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)

13:17:33.999 response time in milliseconds: 5
1 < 200
1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
1 < Content-Type: application/json;charset=UTF-8
1 < Date: Thu, 20 Sep 2018 07:32:33 GMT
1 < Expires: 0
1 < Pragma: no-cache
1 < Transfer-Encoding: chunked
1 < X-Content-Type-Options: nosniff
1 < X-Frame-Options: DENY
1 < X-XSS-Protection: 1; mode=block
{"id":45,"name":"Tom"}

13:17:34.073 request:
1 > POST http://127.0.0.1:58351/cats
1 > Accept: application/xml
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 27
1 > Content-Type: application/xml; charset=UTF-8
1 > Host: 127.0.0.1:58351
1 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)
<cat><name>Tom</name></cat>

13:17:34.076 response time in milliseconds: 3
1 < 200
1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
1 < Content-Type: application/xml
1 < Date: Thu, 20 Sep 2018 07:32:33 GMT
1 < Expires: 0
1 < Pragma: no-cache
1 < Transfer-Encoding: chunked
1 < X-Content-Type-Options: nosniff
1 < X-Frame-Options: DENY
1 < X-XSS-Protection: 1; mode=block
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><cat><id>47</id><name>Tom</name></cat>

13:17:34.089 request:
1 > GET http://127.0.0.1:58351/cats/47
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:58351
1 > User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_162)

13:17:34.092 response time in milliseconds: 3
1 < 200
1 < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
1 < Content-Type: application/json;charset=UTF-8
1 < Date: Thu, 20 Sep 2018 07:32:33 GMT
1 < Expires: 0
1 < Pragma: no-cache
1 < Transfer-Encoding: chunked
1 < X-Content-Type-Options: nosniff
1 < X-Frame-Options: DENY
1 < X-XSS-Protection: 1; mode=block
{"id":47,"name":"Tom"}

8080/headers
13:06:50.029 http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused)
13:06:50.030 feature call failed: classpath:demo/headers/common-noheaders.feature
arg: [object Object]


org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused)
13:06:50.030 javascript function call failed: 


org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:8080 [/127.0.0.1] failed: Connection refused (Connection refused)
13:06:50.031 failed function body: function() {
  karate.configure('connectTimeout', 5000);
  karate.configure('readTimeout', 5000);  
  var port = karate.properties['demo.server.port'];  
  if (!port) {
    port = karate.env == 'web' ? 8090 : 8080;
  }
  var protocol = 'http';
  if (karate.properties['demo.server.https'] == 'true') {
    protocol = 'https';
    karate.configure('ssl', true);
  }  
  var config = { demoBaseUrl: protocol + '://127.0.0.1:' + port };
  if (karate.env == 'proxy') {
    var proxyPort = karate.properties['demo.proxy.port']
    karate.configure('proxy', 'http://127.0.0.1:' + proxyPort);
  }
  if (karate.env != 'mock' && karate.env != 'proxy' && karate.env != 'contract') {
    // 'callSingle' is guaranteed to run only once even across all threads
    var result = karate.callSingle('classpath:demo/headers/common-noheaders.feature', config);
    // and it sets a variable called 'authInfo' used in headers-single.feature
    config.authInfo = { authTime: result.time, authToken: result.token };
  }
  return config;
}
