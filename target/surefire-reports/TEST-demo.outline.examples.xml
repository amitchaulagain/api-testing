<?xml version="1.0" encoding="UTF-8"?>
<testsuite failures="0"
           name="patterns for using cucumber scenario-outline and examples with karate"
           skipped="0"
           tests="10"
           time="0.255039">
   <testcase classname="demo.outline.examples"
             name="avoid empty cells and use null in 'Examples' to work better with karate (1)"
             time="0.01953">
      <system-out>* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params { name: 'foo', country: 'IN', active: true, limit: 1 }...........passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains {}.............................................passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="avoid empty cells and use null in 'Examples' to work better with karate (2)"
             time="0.021158">
      <system-out>* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params { name: 'bar', country: null, active: null, limit: 5 }...........passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { country: '#notnull', active: '#notnull' }....passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="avoid empty cells and use null in 'Examples' to work better with karate (3)"
             time="0.030323">
      <system-out>* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params { name: 'baz', country: 'JP', active: null, limit: null }........passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { active: '#notnull', limit: '#notnull' }......passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="avoid empty cells and use null in 'Examples' to work better with karate (4)"
             time="0.01055">
      <system-out>* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params { name: null, country: 'US', active: null, limit: 3 }............passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { name: '#notnull', active: '#notnull' }.......passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="avoid empty cells and use null in 'Examples' to work better with karate (5)"
             time="0.006747">
      <system-out>* url demoBaseUrl...........................................................passed
Given path 'search'.........................................................passed
And params { name: null, country: null, active: false, limit: null }........passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains { name: '#notnull', country: '#notnull', limit: '#notnull' }.passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="combine 'Examples' embedded expressions and karate expression evaluation (1)"
             time="0.014207">
      <system-out>* url demoBaseUrl...........................................................passed
* def names = { first: 'foo', second: 'bar', third: 'baz', fourth: null, fifth: null }.passed
* def missing =.............................................................passed
Given path 'search'.........................................................passed
And params { name: '#(names.first)', country: 'IN', active: true, limit: 1 }.passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains missing[0].....................................passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="combine 'Examples' embedded expressions and karate expression evaluation (2)"
             time="0.048267">
      <system-out>* url demoBaseUrl...........................................................passed
* def names = { first: 'foo', second: 'bar', third: 'baz', fourth: null, fifth: null }.passed
* def missing =.............................................................passed
Given path 'search'.........................................................passed
And params { name: '#(names.second)', country: null, active: null, limit: 5 }.passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains missing[1].....................................passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="combine 'Examples' embedded expressions and karate expression evaluation (3)"
             time="0.039885">
      <system-out>* url demoBaseUrl...........................................................passed
* def names = { first: 'foo', second: 'bar', third: 'baz', fourth: null, fifth: null }.passed
* def missing =.............................................................passed
Given path 'search'.........................................................passed
And params { name: '#(names.third)', country: 'JP', active: null, limit: null }.passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains missing[2].....................................passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="combine 'Examples' embedded expressions and karate expression evaluation (4)"
             time="0.04622">
      <system-out>* url demoBaseUrl...........................................................passed
* def names = { first: 'foo', second: 'bar', third: 'baz', fourth: null, fifth: null }.passed
* def missing =.............................................................passed
Given path 'search'.........................................................passed
And params { name: '#(names.fourth)', country: 'US', active: null, limit: 3 }.passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains missing[3].....................................passed
</system-out>
   </testcase>
   <testcase classname="demo.outline.examples"
             name="combine 'Examples' embedded expressions and karate expression evaluation (5)"
             time="0.018152">
      <system-out>* url demoBaseUrl...........................................................passed
* def names = { first: 'foo', second: 'bar', third: 'baz', fourth: null, fifth: null }.passed
* def missing =.............................................................passed
Given path 'search'.........................................................passed
And params { name: '#(names.fifth)', country: null, active: false, limit: null }.passed
When method get.............................................................passed
Then status 200.............................................................passed
And match response !contains missing[4].....................................passed
</system-out>
   </testcase>
</testsuite>
